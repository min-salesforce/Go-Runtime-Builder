<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ metadata.name | default("Feature Name") }} - Salesforce Setup</title>
    <link rel="stylesheet" href="../css/slds2-temp.css">
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: "Salesforce Sans", Arial, sans-serif;
            background-color: #f3f2f2;
            color: #080707;
            overflow: hidden;
        }

        /* Salesforce Header */
        .sf-header {
            background: #fff;
            border-bottom: 1px solid #c9c7c5;
            height: 48px;
            display: flex;
            align-items: center;
            position: fixed;
            top: 0;
            left: 64px;
            right: 0;
            z-index: 1000;
            padding: 0 12px;
            box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.1);
        }

        .sf-header-left {
            display: flex;
            align-items: center;
            gap: 16px;
            flex-shrink: 0;
        }

        .sf-logo {
            width: 24px;
            height: 24px;
            background: #1589ee;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: bold;
        }

        .sf-nav {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sf-nav-item {
            padding: 6px 8px;
            color: #080707;
            text-decoration: none;
            border-radius: 4px;
            font-size: 13px;
            font-weight: 400;
            display: flex;
            align-items: center;
            gap: 4px;
            transition: background 0.15s ease;
        }

        .sf-nav-item:hover {
            background: #f3f2f2;
        }

        .sf-nav-item.active {
            background: #f3f2f2;
            font-weight: 600;
        }

        .sf-header-center {
            display: flex;
            align-items: center;
            flex: 1;
            justify-content: center;
            max-width: 640px;
            margin: 0 24px;
            gap: 12px;
        }

        .sf-app-selector {
            display: flex;
            align-items: center;
            background: #f3f2f2;
            border-radius: 4px;
            padding: 6px 8px;
            color: #080707;
            font-size: 13px;
            font-weight: 500;
            text-decoration: none;
            gap: 4px;
            white-space: nowrap;
        }

        .sf-search {
            display: flex;
            align-items: center;
            background: #f3f2f2;
            border-radius: 4px;
            padding: 6px 12px;
            flex: 1;
            max-width: 400px;
        }

        .sf-search-icon {
            color: #706e6b;
            font-size: 14px;
            margin-right: 8px;
        }

        .sf-search input {
            background: none;
            border: none;
            outline: none;
            width: 100%;
            font-size: 13px;
            color: #080707;
        }

        .sf-search input::placeholder {
            color: #706e6b;
        }

        .sf-header-right {
            display: flex;
            align-items: center;
            gap: 8px;
            flex-shrink: 0;
        }

        .sf-icon-btn {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            color: #706e6b;
            font-size: 14px;
            text-decoration: none;
            transition: background 0.15s ease;
            font-weight: 600;
        }

        .sf-icon-btn:hover {
            background: #f3f2f2;
            color: #080707;
        }

        .sf-icon-btn.grid-icon {
            font-size: 12px;
            line-height: 1;
        }

        .sf-user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: #1589ee;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
        }

        .sf-dropdown-arrow {
            font-size: 10px;
            color: #706e6b;
        }

        /* Tab Bar Below Header */
        .sf-tab-bar {
            background: #fff;
            border-bottom: 1px solid #c9c7c5;
            height: 40px;
            position: fixed;
            top: 48px;
            left: 64px;
            right: 0;
            z-index: 999;
            display: flex;
            align-items: center;
            padding: 0 12px;
        }

        .sf-nav {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sf-nav-item {
            padding: 6px 12px;
            color: #080707;
            text-decoration: none;
            border-radius: 4px;
            font-size: 13px;
            font-weight: 400;
            display: flex;
            align-items: center;
            gap: 4px;
            transition: background 0.15s ease;
        }

        .sf-nav-item:hover {
            background: #f3f2f2;
        }

        .sf-nav-item.active {
            background: #f3f2f2;
            font-weight: 600;
        }

        /* Main Layout */
        .page-layout {
            position: fixed;
            top: 88px;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
        }

        /* Salesforce Side Navigation */
        .sf-sidenav {
            width: 64px;
            height: 100vh;
            background: #002775;
            padding: 16px 4px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 4px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1001;
        }

        .sf-sidenav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 4px 0;
            min-height: 64px;
            width: 64px;
            text-decoration: none;
            color: white;
            transition: background 0.15s ease;
        }

        .sf-sidenav-item:hover {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
        }

        .sf-sidenav-icon-wrapper {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 4px;
            padding: 5px;
            margin-bottom: 4px;
        }

        .sf-sidenav-icon {
            width: 24px;
            height: 24px;
            fill: white;
        }

        .sf-sidenav-label {
            font-family: "SF Pro", "Salesforce Sans", Arial, sans-serif;
            font-size: 10px;
            font-weight: 600;
            line-height: 14px;
            text-align: center;
            color: white;
            max-width: 56px;
            word-wrap: break-word;
        }

        /* Setup Page Navigation */
        .setup-page-nav {
            width: 240px;
            background: #fff;
            border-right: 1px solid #c9c7c5;
            height: calc(100vh - 88px);
            position: fixed;
            top: 88px;
            left: 64px;
            z-index: 900;
            overflow-y: auto;
        }

        .setup-search {
            padding: 16px 16px 12px;
            border-bottom: 1px solid #f3f2f2;
        }

        .setup-search-input {
            width: 100%;
            padding: 8px 12px 8px 36px;
            border: 1px solid #c9c7c5;
            border-radius: 4px;
            font-size: 13px;
            background: #fff;
            position: relative;
        }

        .setup-search-input::placeholder {
            color: #706e6b;
        }

        .setup-search-wrapper {
            position: relative;
        }

        .setup-search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #706e6b;
            font-size: 14px;
        }

        .setup-nav-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .setup-nav-item {
            display: block;
            padding: 10px 16px;
            color: #080707;
            text-decoration: none;
            font-size: 13px;
            border-left: 3px solid transparent;
            transition: background 0.15s ease;
        }

        .setup-nav-item:hover {
            background: #f3f2f2;
        }

        .setup-nav-item.active {
            background: #e5f3ff;
            border-left-color: #1589ee;
            font-weight: 600;
            color: #1589ee;
        }

        .setup-nav-section {
            margin-top: 20px;
        }

        .setup-nav-section-title {
            padding: 8px 16px;
            font-size: 11px;
            font-weight: 600;
            color: #706e6b;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            background: #f3f2f2;
        }

        .setup-nav-section .setup-nav-item {
            padding-left: 24px;
            font-size: 13px;
        }

        /* Main Content */
        .main-content {
            position: fixed;
            top: 88px;
            left: 304px;
            right: 0;
            bottom: 0;
            background: #f7f6f6;
            overflow-y: auto;
            overflow-x: hidden;
            display: flex;
            gap: 24px;
            padding: 24px;
        }

        .content-primary {
            flex: 1;
            max-width: 600px;
        }

        .content-secondary {
            width: 300px;
            display: none;
        }

        /* Breadcrumbs */
        .breadcrumbs {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 16px;
            font-size: 12px;
        }

        .breadcrumbs a {
            color: #1589ee;
            text-decoration: none;
        }

        .breadcrumbs span {
            color: #706e6b;
        }

        /* Page Header */
        .page-header {
            margin-bottom: 24px;
        }

        .feature-badge {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            background: #1589ee;
            color: #fff;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .page-title {
            font-size: 24px;
            font-weight: 600;
            color: #080707;
            margin-bottom: 8px;
        }

        .page-subtitle {
            color: #706e6b;
            font-size: 14px;
            margin-bottom: 16px;
        }

        .progress-status {
            display: flex;
            align-items: center;
            gap: 12px;
            font-size: 13px;
        }

        .progress-text {
            color: #706e6b;
        }

        .refresh-btn {
            color: #1589ee;
            text-decoration: none;
            font-weight: 500;
        }

        .suggested-badge {
            background: #9f2a9f;
            color: #fff;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
            margin-left: auto;
        }

        /* Collapsible Sections */
        .config-section {
            background: #fff;
            border-radius: 4px;
            margin-bottom: 16px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        }

        .section-header {
            display: flex;
            align-items: center;
            padding: 16px 20px;
            cursor: pointer;
            border-bottom: 1px solid #f3f2f2;
        }

        .section-toggle {
            margin-right: 12px;
            font-size: 16px;
            color: #706e6b;
        }

        .section-title {
            font-size: 16px;
            font-weight: 600;
            color: #080707;
        }

        .turn-on-badge {
            margin-left: auto;
            background: #1589ee;
            color: #fff;
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
        }

        .section-content {
            padding: 20px;
        }

        .section-description {
            color: #706e6b;
            font-size: 13px;
            margin-bottom: 16px;
        }

        .section-links {
            display: flex;
            gap: 16px;
            margin-bottom: 16px;
            font-size: 12px;
        }

        .section-links a {
            color: #1589ee;
            text-decoration: none;
        }

        /* Step Items */
        .step-item {
            display: flex;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid #f3f2f2;
        }

        .step-item:last-child {
            border-bottom: none;
        }

        .step-icon {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid #dddbda;
            margin-right: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            color: #706e6b;
        }

        .step-title {
            flex: 1;
            font-size: 13px;
            color: #080707;
        }

        .step-action {
            color: #1589ee;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
        }

        /* Toggle Switch */
        .toggle-switch {
            position: relative;
            width: 44px;
            height: 24px;
            background: #1589ee;
            border-radius: 12px;
            cursor: pointer;
        }

        .toggle-switch::after {
            content: '';
            position: absolute;
            top: 2px;
            right: 2px;
            width: 20px;
            height: 20px;
            background: #fff;
            border-radius: 50%;
            transition: transform 0.2s;
        }

        /* Right Sidebar */
        .sidebar-card {
            background: #fff;
            border-radius: 4px;
            padding: 20px;
            margin-bottom: 16px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        }

        .sidebar-title {
            font-size: 14px;
            font-weight: 600;
            color: #080707;
            margin-bottom: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .info-icon {
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: #706e6b;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
        }

        /* Progress Bars */
        .progress-item {
            margin-bottom: 16px;
        }

        .progress-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 4px;
        }

        .progress-label {
            font-size: 12px;
            color: #080707;
        }

        .progress-value {
            font-size: 12px;
            color: #706e6b;
        }

        .progress-bar {
            height: 6px;
            background: #f3f2f2;
            border-radius: 3px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            border-radius: 3px;
        }

        .progress-assigned { background: #9f2a9f; }
        .progress-active { background: #4bca81; }

        .show-all-btn {
            color: #1589ee;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
            display: block;
            text-align: center;
            margin-top: 8px;
        }

        /* Feature Preview */
        .feature-preview {
            text-align: center;
            margin-bottom: 16px;
        }

        .preview-image {
            width: 100%;
            height: 120px;
            background: #f3f2f2;
            border-radius: 4px;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #706e6b;
            font-size: 12px;
        }

        .see-how-works {
            color: #1589ee;
            text-decoration: none;
            font-size: 12px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        /* Feature Sets */
        .feature-sets {
            display: flex;
            gap: 8px;
            margin-bottom: 16px;
        }

        .feature-set-tag {
            background: #f3f2f2;
            color: #080707;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            text-decoration: none;
        }

        /* Learning Resources */
        .learning-item {
            margin-bottom: 12px;
        }

        .learning-item a {
            color: #1589ee;
            text-decoration: none;
            font-size: 12px;
        }

        .learning-section {
            margin-bottom: 20px;
        }

        .learning-section h4 {
            font-size: 12px;
            font-weight: 600;
            color: #080707;
            margin-bottom: 8px;
        }

        /* Floating Edit Mode Toggle */
        .edit-toggle-btn {
            position: fixed;
            bottom: 24px;
            right: 24px;
            z-index: 9999;
            background: #f99120;
            color: #fff;
            border: none;
            padding: 12px 16px;
            border-radius: 50px;
            font-size: 13px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            white-space: nowrap;
        }

        .edit-toggle-btn:hover {
            background: #e6820e;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);
        }

        .edit-toggle-btn.editing {
            background: #4bca81;
        }

        .edit-toggle-btn.editing:hover {
            background: #3eb370;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(75, 202, 129, 0.4);
        }

        /* Add Section Button */
        .add-section-btn {
            display: none;
            background: #1589ee;
            color: white;
            border: 2px dashed #1589ee;
            border-radius: 6px;
            padding: 12px;
            margin: 16px 0;
            width: 100%;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            text-align: center;
        }

        .add-section-btn:hover {
            background: #0e6db8;
            border-color: #0e6db8;
            transform: translateY(-1px);
        }

        .add-section-btn.editing {
            display: block;
        }

        /* Drag Handle */
        .drag-handle {
            display: none;
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: #706e6b;
            color: white;
            border: none;
            border-radius: 4px;
            width: 24px;
            height: 24px;
            cursor: grab;
            font-size: 14px;
            align-items: center;
            justify-content: center;
            transition: background 0.2s;
        }

        .drag-handle:hover {
            background: #5c5a57;
        }

        .drag-handle:active {
            cursor: grabbing;
        }

        .drag-handle.editing {
            display: flex;
        }

        /* Section positioning for drag handle */
        .config-section {
            position: relative;
        }

        /* Dragging states */
        .config-section.dragging {
            opacity: 0.5;
            transform: rotate(2deg);
        }

        .config-section.drag-over {
            border-top: 3px solid #1589ee;
        }

        /* Delete section button */
        .delete-section-btn {
            display: none;
            position: absolute;
            right: 44px;
            top: 50%;
            transform: translateY(-50%);
            background: #d83b01;
            color: white;
            border: none;
            border-radius: 4px;
            width: 24px;
            height: 24px;
            cursor: pointer;
            font-size: 12px;
            align-items: center;
            justify-content: center;
            transition: background 0.2s;
        }

        .delete-section-btn:hover {
            background: #b32b00;
        }

        .delete-section-btn.editing {
            display: flex;
        }

        /* Editable Field Styles */
        .editable {
            position: relative;
            transition: all 0.2s;
        }

        .editable.editing {
            background: #fffacd;
            border: 2px dashed #f99120;
            border-radius: 4px;
            padding: 4px;
            cursor: text;
        }

        .editable.editing:hover {
            border-color: #e6820e;
        }

        .editable.editing::before {
            content: '✏️';
            position: absolute;
            top: -8px;
            right: -8px;
            background: #f99120;
            color: white;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 8px;
            z-index: 10;
        }

        .editable input,
        .editable textarea {
            width: 100%;
            border: none;
            background: transparent;
            font-family: inherit;
            font-size: inherit;
            font-weight: inherit;
            color: inherit;
            padding: 0;
            margin: 0;
            outline: none;
            resize: none;
        }

        .editable textarea {
            min-height: 40px;
        }

        .edit-mode-indicator {
            position: fixed;
            top: 60px;
            right: 20px;
            background: #f99120;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            z-index: 1001;
            display: none;
        }

        .edit-mode-indicator.show {
            display: block;
        }

        .save-indicator {
            position: fixed;
            top: 60px;
            left: 50%;
            transform: translateX(-50%);
            background: #4bca81;
            color: white;
            padding: 8px 16px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            z-index: 1001;
            display: none;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .save-indicator.show {
            display: block;
            opacity: 1;
        }
    </style>
</head>
<body>
    <!-- Salesforce Header -->
    <div class="sf-header">
        <div class="sf-header-left">
            <div class="sf-logo">☁</div>
        </div>
        <div class="sf-header-center">
            <a href="#" class="sf-app-selector">
                All <span class="sf-dropdown-arrow">▼</span>
            </a>
            <div class="sf-search">
                <span class="sf-search-icon">🔍</span>
                <input type="text" placeholder="Search Salesforce">
            </div>
        </div>
        <div class="sf-header-right">
            <a href="#" class="sf-icon-btn grid-icon" title="App Launcher">⋮⋮</a>
            <a href="#" class="sf-icon-btn" title="Add">+</a>
            <a href="#" class="sf-icon-btn" title="Notifications">🔔</a>
            <a href="#" class="sf-icon-btn" title="Help">?</a>
            <a href="#" class="sf-icon-btn" title="Setup">⚙</a>
            <a href="#" class="sf-icon-btn" title="Notifications">📢</a>
            <div class="sf-user-avatar" title="User Menu">JD</div>
        </div>
    </div>

    <!-- Tab Bar -->
    <div class="sf-tab-bar">
        <nav class="sf-nav">
            <a href="#" class="sf-nav-item active">Setup</a>
            <a href="#" class="sf-nav-item">
                Home <span class="sf-dropdown-arrow">▼</span>
            </a>
        </nav>
    </div>

    <div class="page-layout">
        <!-- Salesforce Side Navigation -->
        <nav class="sf-sidenav">
            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Sales</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <circle cx="12" cy="12" r="3"/>
                        <path d="M12 1v6M12 17v6M4.22 4.22l4.24 4.24M15.54 15.54l4.24 4.24M1 12h6M17 12h6M4.22 19.78l4.24-4.24M15.54 8.46l4.24-4.24"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Service</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <path d="M18 20V10M12 20V4M6 20v-6"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Marketing</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <circle cx="9" cy="21" r="1"/>
                        <circle cx="20" cy="21" r="1"/>
                        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Commerce</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <path d="M21.21 15.89A10 10 0 1 1 8 2.83M22 12A10 10 0 0 0 12 2v10z"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Analytics</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <path d="M20 6 9 17l-5-5"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Tableau</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <ellipse cx="12" cy="5" rx="9" ry="3"/>
                        <path d="M3 5v14c0 1.66 4.03 3 9 3s9-1.34 9-3V5"/>
                        <path d="M3 12c0 1.66 4.03 3 9 3s9-1.34 9-3"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Data Cloud</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
                        <circle cx="9" cy="7" r="4"/>
                        <path d="M22 21v-2a4 4 0 0 0-3-3.87M16 3.13a4 4 0 0 1 0 7.75"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">Contacts</div>
            </a>

            <a href="#" class="sf-sidenav-item">
                <div class="sf-sidenav-icon-wrapper">
                    <svg class="sf-sidenav-icon" viewBox="0 0 24 24">
                        <circle cx="12" cy="12" r="1"/>
                        <circle cx="12" cy="5" r="1"/>
                        <circle cx="12" cy="19" r="1"/>
                    </svg>
                </div>
                <div class="sf-sidenav-label">More</div>
            </a>
        </nav>

        <!-- Setup Page Navigation -->
        <nav class="setup-page-nav">
            <div class="setup-search">
                <div class="setup-search-wrapper">
                    <div class="setup-search-icon">🔍</div>
                    <input type="text" class="setup-search-input" placeholder="Quick Find">
                </div>
            </div>
            
            <ul class="setup-nav-list">
                <li><a href="#" class="setup-nav-item">Setup Home</a></li>
                <li><a href="#" class="setup-nav-item active">Salesforce Go</a></li>
                
                <li class="setup-nav-section">
                    <div class="setup-nav-section-title">Administration</div>
                    <a href="#" class="setup-nav-item">Users</a>
                    <a href="#" class="setup-nav-item">Data</a>
                    <a href="#" class="setup-nav-item">Email</a>
                </li>
                
                <li class="setup-nav-section">
                    <div class="setup-nav-section-title">Platform Tools</div>
                    <a href="#" class="setup-nav-item">Apps</a>
                    <a href="#" class="setup-nav-item">Feature Settings</a>
                    <a href="#" class="setup-nav-item">Slack</a>
                    <a href="#" class="setup-nav-item">Heroku</a>
                    <a href="#" class="setup-nav-item">MuleSoft</a>
                    <a href="#" class="setup-nav-item">Einstein</a>
                </li>
            </ul>
        </nav>

        <!-- Main Content -->
        <div class="main-content">
            <div class="content-primary">
                <!-- Breadcrumbs -->
                <div class="breadcrumbs">
                    <a href="#">Salesforce Go</a>
                    <span>›</span>
                    <a href="#">Deflect more cases with self-service</a>
                    <span>›</span>
                    <span>{{ metadata.name | default("Feature Name") }}</span>
                </div>

                <!-- Page Header -->
                <div class="page-header">
                    <div class="feature-badge">
                        <span>☁</span>
                        Foundations
                    </div>
                    <h1 class="page-title editable" data-field="title">{{ metadata.name | default("Feature Name") }}</h1>
                    <p class="page-subtitle editable" data-field="description">{{ metadata.description | default("Build trust by solving issues with self-service features like Agentforce Service Agent and more.") }}</p>
                    
                    <div class="progress-status">
                        <span class="progress-text">3 of 5 Steps Completed</span>
                        <a href="#" class="refresh-btn">🔄 Refresh</a>
                        <div class="suggested-badge">💡 Suggested for You</div>
                    </div>
                </div>

                <!-- Sections Container -->
                <div id="sections-container">
                    <!-- Add Section Button (top) -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Above
                    </button>

                    <!-- Turn On Section -->
                    <div class="config-section" data-section-id="turn-on">
                        <div class="section-header" onclick="toggleSection(this)">
                            <span class="section-toggle">▼</span>
                            <h2 class="section-title editable" data-field="section-turn-on-title">Turn On {{ metadata.name | default("Feature Name") }}</h2>
                            <div class="turn-on-badge">Turn On</div>
                            <button class="delete-section-btn" onclick="deleteSection(this)" title="Delete Section">✖</button>
                            <button class="drag-handle" draggable="true" title="Drag to reorder">≡</button>
                        </div>
                    <div class="section-content">
                        <div class="section-links">
                            <a href="#">📋 Preview Default Settings</a>
                            <a href="#">🔍 See Considerations</a>
                            <a href="#">❓ Setup Help</a>
                        </div>
                        <p class="section-description editable" data-field="section-turn-on-description">Description as needed to help user understand the list of steps below.</p>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title editable" data-field="step-1-title">Step Title</div>
                            <a href="#" class="step-action">Review ↗</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title editable" data-field="step-2-title">Step Title</div>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title editable" data-field="step-3-title">Step Title</div>
                        </div>
                        </div>
                    </div>

                    <!-- Add Section Button -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Here
                    </button>

                    <!-- Set Up the Basics -->
                    <div class="config-section" data-section-id="basics">
                        <div class="section-header" onclick="toggleSection(this)">
                            <span class="section-toggle">▼</span>
                            <h2 class="section-title editable" data-field="section-basics-title">Set Up the Basics</h2>
                            <button class="delete-section-btn" onclick="deleteSection(this)" title="Delete Section">✖</button>
                            <button class="drag-handle" draggable="true" title="Drag to reorder">≡</button>
                        </div>
                    <div class="section-content">
                        <p class="section-description">Complete the required steps to get a basic version of this feature.</p>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Manage User Access<br><small>2 out of 10 assigned</small></div>
                            <a href="#" class="step-action">Manage</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Add Components, Fields, and Actions to Lightning Record Pages<br><small>Component names not found in Accounts</small></div>
                            <a href="#" class="step-action">Manage</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Create Forecast Types<br><small>0 active types</small></div>
                            <a href="#" class="step-action">Create</a>
                        </div>
                        </div>
                    </div>

                    <!-- Add Section Button -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Here
                    </button>

                    <!-- Review Email-to-Case Settings -->
                    <div class="config-section" data-section-id="email-case">
                        <div class="section-header" onclick="toggleSection(this)">
                            <span class="section-toggle">▼</span>
                            <h2 class="section-title editable" data-field="section-email-case-title">Review Email-to-Case Settings</h2>
                            <button class="delete-section-btn" onclick="deleteSection(this)" title="Delete Section">✖</button>
                            <button class="drag-handle" draggable="true" title="Drag to reorder">≡</button>
                        </div>
                    <div class="section-content">
                        <div class="step-item">
                            <div class="step-icon">☐</div>
                            <div class="step-title">Review Email-to-Case Settings</div>
                            <a href="#" class="step-action">Go to Setup ↗</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Define Over Email Rate Limit Action <span style="color: #706e6b;">Optional</span></div>
                            <a href="#" class="step-action">Go to Setup ↗</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Define Unauthorized Sender Action <span style="color: #706e6b;">Optional</span></div>
                            <a href="#" class="step-action">Go to Setup ↗</a>
                        </div>
                        </div>
                    </div>

                    <!-- Add Section Button -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Here
                    </button>

                    <!-- Unlock Advanced Functionality -->
                    <div class="config-section" data-section-id="advanced">
                        <div class="section-header" onclick="toggleSection(this)">
                            <span class="section-toggle">▼</span>
                            <h2 class="section-title editable" data-field="section-advanced-title">Unlock Advanced Functionality</h2>
                            <button class="delete-section-btn" onclick="deleteSection(this)" title="Delete Section">✖</button>
                            <button class="drag-handle" draggable="true" title="Drag to reorder">≡</button>
                        </div>
                    <div class="section-content">
                        <p class="section-description">Customize or improve your implementation with the following optional steps.</p>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Default Activity Sharing for New Users</div>
                            <a href="#" class="step-action">Manage</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Enforce Default Activity Sharing for New Users</div>
                            <div class="toggle-switch"></div>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Customize Your Agent with Topics and Actions</div>
                            <a href="#" class="step-action">Go to Setup ↗</a>
                        </div>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title">Select the Insights You Want to Show</div>
                            <a href="#" class="step-action">Go to Setup ↗</a>
                        </div>
                        </div>
                    </div>

                    <!-- Add Section Button -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Here
                    </button>

                    <!-- Purchase Options -->
                    <div class="config-section" data-section-id="purchase">
                        <div class="section-header" onclick="toggleSection(this)">
                            <span class="section-toggle">▶</span>
                            <h2 class="section-title editable" data-field="section-purchase-title">Purchase Options</h2>
                            <button class="delete-section-btn" onclick="deleteSection(this)" title="Delete Section">✖</button>
                            <button class="drag-handle" draggable="true" title="Drag to reorder">≡</button>
                        </div>
                    </div>

                    <!-- Add Section Button (bottom) -->
                    <button class="add-section-btn" onclick="addSection(this)">
                        ➕ Add New Section Below
                    </button>
                </div>
            </div>

            <!-- Right Sidebar -->
            <div class="content-secondary">
                <!-- Monitor Feature User -->
                <div class="sidebar-card">
                    <h3 class="sidebar-title">
                        Monitor Feature User
                        <div class="info-icon">i</div>
                    </h3>
                    
                    <div class="progress-item">
                        <div class="progress-header">
                            <span class="progress-label">PSL Set Name</span>
                            <span class="progress-value">600 total</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill progress-assigned" style="width: 30%"></div>
                        </div>
                        <div style="font-size: 10px; color: #9f2a9f; margin-top: 2px;">Assigned 300</div>
                    </div>
                    
                    <div class="progress-item">
                        <div class="progress-header">
                            <span class="progress-label">PSL Set Name</span>
                            <span class="progress-value">600 total</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill progress-active" style="width: 50%"></div>
                        </div>
                        <div style="font-size: 10px; color: #4bca81; margin-top: 2px;">Active 300</div>
                    </div>
                    
                    <div class="progress-item">
                        <div class="progress-header">
                            <span class="progress-label">PSL Set Name</span>
                            <span class="progress-value">600 total</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill progress-assigned" style="width: 30%"></div>
                        </div>
                        <div style="font-size: 10px; color: #9f2a9f; margin-top: 2px;">Assigned 300</div>
                    </div>
                    
                    <a href="#" class="show-all-btn">Show All ▼</a>
                </div>

                <!-- Get to Know Your Feature -->
                <div class="sidebar-card">
                    <h3 class="sidebar-title">Get to Know Your {{ metadata.name | default("Feature Name") }}</h3>
                    
                    <div class="feature-preview">
                        {% if assets.screenshotDataUrl %}
                        <img src="{{ assets.screenshotDataUrl }}" alt="Feature Preview" style="width: 100%; height: 120px; object-fit: cover; border-radius: 4px;">
                        {% else %}
                        <div class="preview-image">Feature Preview</div>
                        {% endif %}
                        <a href="#" class="see-how-works">See How It Works 📺</a>
                    </div>
                    
                    <div class="feature-sets">
                        <a href="#" class="feature-set-tag">Automate & Close Setting</a>
                        <a href="#" class="feature-set-tag">Boost Sales Productivity with AI</a>
                    </div>
                </div>

                <!-- See the Latest Updates -->
                <div class="sidebar-card">
                    <h3 class="sidebar-title">See the Latest Updates</h3>
                    <div class="learning-item">
                        <a href="#">New in Einstein Conversation Insights</a>
                    </div>
                </div>

                <!-- Learn on Trailhead -->
                <div class="sidebar-card">
                    <h3 class="sidebar-title">Learn on Trailhead</h3>
                    <div class="learning-section">
                        <div class="learning-item">
                            <a href="#">Meet Einstein Conversation Insights for Sales 🏆</a>
                        </div>
                        <div class="learning-item">
                            <a href="#">Find Out How Einstein Einstein Conversation Insights...</a>
                        </div>
                        <div class="learning-item">
                            <a href="#">User Management</a>
                        </div>
                    </div>
                </div>

                <!-- Explore Salesforce Help -->
                <div class="sidebar-card">
                    <h3 class="sidebar-title">Explore Salesforce Help</h3>
                    <div class="learning-item">
                        <a href="#">Set Up Einstein Conversation Insights for Sales</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Mode Indicators -->
    <div id="edit-mode-indicator" class="edit-mode-indicator">
        📝 Edit Mode Active - Click on highlighted content to edit
    </div>
    
    <div id="save-indicator" class="save-indicator">
        💾 Changes Saved
    </div>

    <script>
        let editMode = false;
        let editData = {};

        // Initialize edit data with current content
        function initializeEditData() {
            document.querySelectorAll('.editable').forEach(element => {
                const field = element.getAttribute('data-field');
                editData[field] = element.textContent.trim();
            });
        }

        // Section management functions
        let sectionCounter = Date.now(); // Use timestamp for unique IDs

        function addSection(button) {
            const newSectionId = 'section-' + (++sectionCounter);
            const newSectionHTML = `
                <!-- Add Section Button -->
                <button class="add-section-btn editing" onclick="addSection(this)">
                    ➕ Add New Section Here
                </button>

                <!-- New Section -->
                <div class="config-section" data-section-id="${newSectionId}">
                    <div class="section-header" onclick="toggleSection(this)">
                        <span class="section-toggle">▼</span>
                        <h2 class="section-title editable editing" data-field="section-${newSectionId}-title">New Section Title</h2>
                        <button class="delete-section-btn editing" onclick="deleteSection(this)" title="Delete Section">✖</button>
                        <button class="drag-handle editing" draggable="true" title="Drag to reorder">≡</button>
                    </div>
                    <div class="section-content">
                        <p class="section-description editable editing" data-field="section-${newSectionId}-description">Describe what this section helps users accomplish.</p>
                        
                        <div class="step-item">
                            <div class="step-icon">○</div>
                            <div class="step-title editable editing" data-field="step-${newSectionId}-1-title">New Step Title</div>
                            <a href="#" class="step-action">Action ↗</a>
                        </div>
                    </div>
                </div>
            `;

            // Insert the new section after the button
            button.insertAdjacentHTML('afterend', newSectionHTML);

            // Initialize edit data for new fields
            document.querySelectorAll(`.editable[data-field^="section-${newSectionId}"]`).forEach(element => {
                const field = element.getAttribute('data-field');
                editData[field] = element.textContent.trim();
                if (editMode) {
                    makeElementEditable(element);
                }
            });

            // Setup drag and drop for the new section
            setupDragAndDrop();

            // Show save indicator
            showSaveIndicator();
        }

        function deleteSection(button) {
            if (confirm('Are you sure you want to delete this section?')) {
                const section = button.closest('.config-section');
                const sectionId = section.getAttribute('data-section-id');
                
                // Remove from edit data
                Object.keys(editData).forEach(key => {
                    if (key.includes(sectionId)) {
                        delete editData[key];
                    }
                });

                // Remove the section and the preceding add button
                const prevAddButton = section.previousElementSibling;
                if (prevAddButton && prevAddButton.classList.contains('add-section-btn')) {
                    prevAddButton.remove();
                }
                section.remove();

                // Show save indicator
                showSaveIndicator();
            }
        }

        // Drag and drop functionality
        function setupDragAndDrop() {
            const container = document.getElementById('sections-container');
            let draggedElement = null;

            document.querySelectorAll('.drag-handle').forEach(handle => {
                handle.addEventListener('dragstart', function(e) {
                    draggedElement = this.closest('.config-section');
                    draggedElement.classList.add('dragging');
                    e.dataTransfer.effectAllowed = 'move';
                });

                handle.addEventListener('dragend', function(e) {
                    if (draggedElement) {
                        draggedElement.classList.remove('dragging');
                        draggedElement = null;
                    }
                    // Remove drag-over class from all sections
                    document.querySelectorAll('.config-section').forEach(section => {
                        section.classList.remove('drag-over');
                    });
                });
            });

            document.querySelectorAll('.config-section').forEach(section => {
                section.addEventListener('dragover', function(e) {
                    e.preventDefault();
                    if (draggedElement && draggedElement !== this) {
                        this.classList.add('drag-over');
                    }
                });

                section.addEventListener('dragleave', function(e) {
                    this.classList.remove('drag-over');
                });

                section.addEventListener('drop', function(e) {
                    e.preventDefault();
                    this.classList.remove('drag-over');
                    
                    if (draggedElement && draggedElement !== this) {
                        // Get the add button before dragged element
                        const draggedAddButton = draggedElement.previousElementSibling;
                        
                        // Insert dragged element and its add button before this section
                        this.parentNode.insertBefore(draggedAddButton, this);
                        this.parentNode.insertBefore(draggedElement, this);
                        
                        // Show save indicator
                        showSaveIndicator();
                    }
                });
            });
        }

        // Toggle edit mode
        function toggleEditMode() {
            editMode = !editMode;
            const toggleBtn = document.getElementById('edit-toggle');
            const indicator = document.getElementById('edit-mode-indicator');
            
            if (editMode) {
                // Enter edit mode
                toggleBtn.textContent = '💾 Save & Exit';
                toggleBtn.classList.add('editing');
                indicator.classList.add('show');
                
                // Make elements editable
                document.querySelectorAll('.editable').forEach(element => {
                    element.classList.add('editing');
                    makeElementEditable(element);
                });

                // Show section controls
                document.querySelectorAll('.add-section-btn').forEach(btn => {
                    btn.classList.add('editing');
                });
                document.querySelectorAll('.drag-handle').forEach(handle => {
                    handle.classList.add('editing');
                });
                document.querySelectorAll('.delete-section-btn').forEach(btn => {
                    btn.classList.add('editing');
                });
            } else {
                // Exit edit mode
                toggleBtn.textContent = '✏️ Edit Mode';
                toggleBtn.classList.remove('editing');
                indicator.classList.remove('show');
                
                // Save and make elements read-only
                document.querySelectorAll('.editable').forEach(element => {
                    element.classList.remove('editing');
                    makeElementReadOnly(element);
                });

                // Hide section controls
                document.querySelectorAll('.add-section-btn').forEach(btn => {
                    btn.classList.remove('editing');
                });
                document.querySelectorAll('.drag-handle').forEach(handle => {
                    handle.classList.remove('editing');
                });
                document.querySelectorAll('.delete-section-btn').forEach(btn => {
                    btn.classList.remove('editing');
                });
                
                // Show save confirmation
                showSaveIndicator();
                
                // Save to localStorage
                saveToLocalStorage();
            }
        }

        function makeElementEditable(element) {
            const field = element.getAttribute('data-field');
            const currentText = element.textContent.trim();
            
            // Create appropriate input element
            let inputElement;
            if (element.tagName === 'H1' || element.tagName === 'H2') {
                inputElement = document.createElement('input');
                inputElement.type = 'text';
                inputElement.value = currentText;
            } else {
                inputElement = document.createElement('textarea');
                inputElement.value = currentText;
                // Auto-resize textarea
                inputElement.addEventListener('input', autoResize);
            }
            
            // Apply styles and event handlers
            inputElement.addEventListener('blur', function() {
                editData[field] = this.value.trim();
            });
            
            inputElement.addEventListener('input', function() {
                editData[field] = this.value.trim();
            });
            
            // Replace content with input
            element.innerHTML = '';
            element.appendChild(inputElement);
            
            // Auto-resize for textareas
            if (inputElement.tagName === 'TEXTAREA') {
                autoResize.call(inputElement);
            }
        }

        function makeElementReadOnly(element) {
            const field = element.getAttribute('data-field');
            const savedValue = editData[field] || element.textContent.trim();
            element.innerHTML = savedValue;
        }

        function autoResize() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        }

        function showSaveIndicator() {
            const indicator = document.getElementById('save-indicator');
            indicator.classList.add('show');
            setTimeout(() => {
                indicator.classList.remove('show');
            }, 2000);
        }

        function saveToLocalStorage() {
            // Save section order
            const sectionOrder = [];
            document.querySelectorAll('.config-section').forEach(section => {
                sectionOrder.push(section.getAttribute('data-section-id'));
            });

            const pageData = {
                url: window.location.href,
                timestamp: new Date().toISOString(),
                data: editData,
                sectionOrder: sectionOrder,
                customSections: getCustomSections()
            };
            localStorage.setItem('pageEdit_' + window.location.pathname, JSON.stringify(pageData));
            console.log('Page edits saved to localStorage:', pageData);
        }

        function getCustomSections() {
            const customSections = {};
            document.querySelectorAll('.config-section').forEach(section => {
                const sectionId = section.getAttribute('data-section-id');
                if (sectionId.startsWith('section-')) {
                    // This is a custom section
                    customSections[sectionId] = {
                        html: section.outerHTML,
                        addButtonHtml: section.previousElementSibling.outerHTML
                    };
                }
            });
            return customSections;
        }

        function loadFromLocalStorage() {
            const saved = localStorage.getItem('pageEdit_' + window.location.pathname);
            if (saved) {
                const pageData = JSON.parse(saved);
                editData = { ...editData, ...pageData.data };
                
                // Restore custom sections first
                if (pageData.customSections) {
                    Object.entries(pageData.customSections).forEach(([sectionId, sectionData]) => {
                        // Add the custom section if it doesn't exist
                        if (!document.querySelector(`[data-section-id="${sectionId}"]`)) {
                            const container = document.getElementById('sections-container');
                            const lastAddButton = container.querySelector('.add-section-btn:last-child');
                            if (lastAddButton) {
                                lastAddButton.insertAdjacentHTML('beforebegin', sectionData.addButtonHtml + sectionData.html);
                            }
                        }
                    });
                }

                // Restore section order
                if (pageData.sectionOrder) {
                    const container = document.getElementById('sections-container');
                    const sectionsMap = {};
                    const addButtonsMap = {};
                    
                    // Collect all sections and their add buttons
                    document.querySelectorAll('.config-section').forEach(section => {
                        const sectionId = section.getAttribute('data-section-id');
                        sectionsMap[sectionId] = section;
                        const prevButton = section.previousElementSibling;
                        if (prevButton && prevButton.classList.contains('add-section-btn')) {
                            addButtonsMap[sectionId] = prevButton;
                        }
                    });

                    // Clear container (keep first add button)
                    const firstAddButton = container.querySelector('.add-section-btn');
                    while (container.children.length > 1) {
                        container.removeChild(container.lastChild);
                    }

                    // Re-add sections in saved order
                    pageData.sectionOrder.forEach(sectionId => {
                        if (sectionsMap[sectionId]) {
                            if (addButtonsMap[sectionId]) {
                                container.appendChild(addButtonsMap[sectionId]);
                            }
                            container.appendChild(sectionsMap[sectionId]);
                        }
                    });

                    // Add final add button
                    const finalAddButton = document.createElement('button');
                    finalAddButton.className = 'add-section-btn';
                    finalAddButton.onclick = function() { addSection(this); };
                    finalAddButton.innerHTML = '➕ Add New Section Below';
                    container.appendChild(finalAddButton);
                }
                
                // Apply saved data to elements
                document.querySelectorAll('.editable').forEach(element => {
                    const field = element.getAttribute('data-field');
                    if (editData[field]) {
                        element.textContent = editData[field];
                    }
                });

                // Setup drag and drop again after restoring sections
                setupDragAndDrop();
            }
        }

        function toggleSection(header) {
            const toggle = header.querySelector('.section-toggle');
            const content = header.nextElementSibling;
            
            if (toggle.textContent === '▼') {
                toggle.textContent = '▶';
                content.style.display = 'none';
            } else {
                toggle.textContent = '▼';
                content.style.display = 'block';
            }
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            initializeEditData();
            loadFromLocalStorage();
            setupDragAndDrop();
            
            // Add event listener to edit toggle button
            document.getElementById('edit-toggle').addEventListener('click', toggleEditMode);
            
            // Add keyboard shortcut (Ctrl/Cmd + E)
            document.addEventListener('keydown', function(e) {
                if ((e.ctrlKey || e.metaKey) && e.key === 'e') {
                    e.preventDefault();
                    toggleEditMode();
                }
            });
        });
    </script>

    <!-- Floating Edit Mode Toggle (Development Tool) -->
    <button id="edit-toggle" class="edit-toggle-btn">
        ✏️ Edit Mode
    </button>
</body>
</html>
